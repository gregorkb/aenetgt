% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aenetgt.R
\name{cv.enetgt.grid}
\alias{cv.enetgt.grid}
\title{Peforms crossvalidation to select a combination of tuning parameters.}
\usage{
cv.enetgt.grid(cv.fold.data, regime, Se, Sp, lambda.seq, theta.seq, weights,
  B.INIT, delta = 0.01, E.approx = FALSE, verbose = FALSE, plot = FALSE)
}
\arguments{
\item{cv.fold.data}{Output from any of the functions \code{get.xx.cv.fold.data}, where \code{xx} is \code{individual}, \code{masterpool}, \code{dorfman}, or \code{array}.}

\item{regime}{testing regime which must be equal to one of \code{individual}, \code{masterpool}, \code{dorfman}, and \code{array}.}

\item{Se}{A vector of testing sensitivities, where the first element is the
testing specificity for pools and the second entry is the 
test specificity for individual testing, if applicable.}

\item{Sp}{A vector of testing specificities, where the first element is the
testing specificity for pools and the second entry is the 
test specificity for individual testing, if applicable.}

\item{lambda.seq}{Sequence of lambda values at which the weighted elastic net estimator will be computed.}

\item{theta.seq}{Sequence of theta values at which the weighted elastic net estimator will be computed.}

\item{weights}{Vector of weights to be used in weighting the l1 penalty. Default is \code{weights=1}, which causes equal weights to be used for each coefficient.}

\item{B.INIT}{Array of values to be used to initialize the EM-algorithm at each of the tuning paramter combinations specified in \code{lambda.seq} and \code{theta.seq}.}

\item{delta}{Convergence criterion.}

\item{E.approx}{Logical.  If \code{TRUE} then E-step done with \code{EY.approx()}. If \code{FALSE}, then E-step done with \code{EY.exact()}.}

\item{verbose}{Logical. If \code{TRUE} then progress is reported after computation of the estimator at each tuning parameter pair.}

\item{plot}{Logical. If \code{TRUE} then a plot is produced showing the mean of the crossvalidation estimates of the deviance over the null deviance.}
}
\value{
A list which includes the chosen values of the tuning parameters according to crossvalidation.
}
\description{
Peforms crossvalidation to select a combination of tuning parameters.
}
\examples{
data <- model0(200)
X <- data$X
Y.true <- data$Y
# subject individuals to individual testing
Se <- c(.94) # individual testing sensitivities
Sp <- c(.95) # individual testing specificities
assay.data <- individual.assay.gen(Y.true,Se,Sp,cj=1)
Z <- assay.data$Z
Y <- assay.data$Y
# compute the mle on the individual testing data:
mlegt.out <- mlegt(X,Y,Z,Se,Sp,delta=.01)
b.mle <- mlegt.out$b.mle
# compute adaptive elastic net estimator over a grid of tuning parameter values
n.lambda <- 8
n.theta <- 2
enetgt.grid.out <- enetgt.grid(X,Y,Z,Se,Sp,n.lambda,n.theta,weights = 1/abs(b.mle[-1]),delta=.01)
# make a choice of the tuning parameter using 3-fold crossvalidation:
cv.fold.data <- get.individual.cv.fold.data(X,Y,Z,K=3)
cv.enetgt.grid.out <- cv.enetgt.grid(cv.fold.data,"individual",Se,Sp,enetgt.grid.out$lambda.seq,
					enetgt.grid.out$theta.seq,weights=1/abs(b.mle[-1]),
					B.INIT=enetgt.grid.out$B.ENET,delta=.01)
b.aenet.cv <- enetgt.grid.out$B.ENET[cv.enetgt.grid.out$cv.ind[1],,cv.enetgt.grid.out$cv.ind[2]]
b.aenet.cv
}
